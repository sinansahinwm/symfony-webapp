security:
    # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
    # https://symfony.com/doc/current/security.html#loading-the-user-the-user-provider
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            lazy: true
            provider: app_user_provider
            switch_user: { role: ROLE_CAN_SWITCH, parameter: _impersonate_user }
            user_checker: App\Security\UserChecker
            login_throttling:
                max_attempts: 5
                interval: '1 minute'
            logout:
                path: app_auth_signout
                target: app_auth_signin
            custom_authenticator: App\Security\LoginFormAuthenticator

            remember_me:
                secret: '%kernel.secret%'
                lifetime: 604800 # 7 Days
                path: /
                always_remember_me: true
                signature_properties: ['password']


when@test:
    security:
        password_hashers:
            # By default, password hashers are resource intensive and take time. This is
            # important to generate secure password hashes. In tests however, secure hashes
            # are not important, waste resources and increase test times. The following
            # reduces the work factor to the lowest possible values.
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4 # Lowest possible value for bcrypt
                time_cost: 3 # Lowest possible value for argon
                memory_cost: 10 # Lowest possible value for argon
